#! /usr/bin/env bash

# shellcheck shell=sh disable=SC2039

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io
# maintainer:   Li Junhao

GIT_BIN="$(command -v git)"

# From el-repo

alias gis="git status"
alias giss="git status -s"
alias gib="git branch"

gia(){
    if [ "$1" == "" ]; then
        git add .;
    else
        git add "$@";
    fi
}

giam(){
    local first_arg="$2"
    git add "${2:-.}" "${@:3:}"
    git commit -m "$1"
}

gip(){
    git pull origin $(git branch | awk '$1=="*"{ print $2 }' )
}

giP(){
    if [ -e "$1" ]; then
        git push origin $1
    else
        git push origin $(git branch | awk '$1=="*"{ print $2 }')
    fi
}

git(){
    _git_handle "$@"
    if [ $? -eq 127 ]; then
        $GIT_BIN ${1:+"$@"}
    fi
}

_git_handle(){
    local op
    if [ $# -eq 0 ]; then
        op=help
    else
        op="${1}"
        shift
    fi

    case "$op" in
        a)
            git add ${1:+"$@"} ;;
        ca)             
            _tig_handle commit -a ${1:+"$@"}
            return ;;
        c|commit|cm)    
            (
                for i in "$@"; do
                    case "$i" in
                        -h|--help) 
                            $GIT_BIN commit --help
                            return 0 ;;
                        *) ;;
                    esac
                done
            )

            if : Pre commit code; then
                # Pre hook
                if $GIT_BIN commit ${1:+"$@"}; then
                    : Post commit hook  
                else
                    :
                fi
            fi
            return      ;;
        pa|pull-all)    
            local tgt=${1:-origin} # TODO: ?
            $GIT_BIN track all
            $GIT_BIN fetch "$tgt"
            $GIT_BIN pull "$tgt"
            ;;
        Pa|push-all)    
            local tgt=${1:-origin} # TODO: ?
            $GIT_BIN push -u --all "$tgt"
            $GIT_BIN push --force --tags "$tgt"
            ;;
        track) 
            git branch --track "${1:?local branch}" "${2:?remote branch}"
            ;;
        ta|track-all)
            # TODO: make it universal instead of origin
            # for remote in $(git branch -r | grep -v '\->' | grep -E "^ +origin"); do git branch --track "$remote"; done
            $GIT_BIN branch -r | grep -v '\->' | \
            grep -E "^ +origin" | 
            while read remote; do 
                # git branch --track "${remote#origin/}" "$remote"; 
                git track "${remote#origin/}" "$remote"
            done ;;
        push)           
            (
                for i in "$@"; do
                    case "$i" in
                        -h|--help) 
                            git push --help
                            return 0 ;;
                        *) ;;
                    esac
                done
            )

            if : Pre commit code; then
                # Pre hook
                if $GIT_BIN push ${1:+"$@"}; then
                    : Post commit hook  
                else
                    :
                fi
            fi
            return ;;
        github)         
            # How to interprete the arguments ?
            # Using complete json to anaysis.
            $GIT_BIN clone "git@github.com:${1:?"Please provide name like 'x-bash/git'"}.git"
            return ;;
        gitee)          
            $GIT_BIN clone "git@gitee.com:${1:?"Please provide name like 'x-bash/git'"}.git"  
            return ;;
        gitlab)         
            $GIT_BIN clone "git@gitlab.com:${1:?"Please provide name like 'x-bash/git'"}.git" 
            return;;

        github-http*)         
            $GIT_BIN clone "https://github.com/${1:?"Please provide name like 'x-bash/git'"}.git"
            return ;;
        gitee-http*)          
            $GIT_BIN clone "https://gitee.com/${1:?"Please provide name like 'x-bash/git'"}.git"  
            return ;;
        gitlab-http*)         
            $GIT_BIN clone "https://gitlab.com/${1:?"Please provide name like 'x-bash/git'"}.git" 
            return;;
        is-empty-repo)
            git branch -r | grep -q ^ ;;
    esac

    return 127
}

